.grid {
  display: flex;
  flex-wrap: wrap;
  margin: 0 $spacing-grid $spacing-grid;

  &:last-child {
    margin: 0 $spacing-grid;
  }

  > .grid-cell {
    flex: 1;
    padding: 0 ($spacing-grid / 2);

    &:first-child { padding-left: $spacing-grid; }
    &:last-child  { padding-right: $spacing-grid; }
  }
}


/**
 * Grid directly below the container or panel-body should
 * have negative margins to bring them back into line.
 */
.container > .grid,
.panel-body > .grid {
  margin: 0 -#{$spacing-grid} $spacing-grid;

  &:last-child {
    margin: 0 -#{$spacing-grid};
  }
}


/**
 * No Guttered
 */
.grid.grid-no-gutters {
  &,
  &:last-child {
    margin: 0;
  }

  > .grid-cell {
    padding: 0;
  }
}


/**
 * Vertical Alignment
 */
.grid {
  // All cells
  &.grid-top    { align-items: flex-start; }
  &.grid-middle { align-items: center; }
  &.grid-bottom { align-items: flex-end; }

  // Per cell
  > .grid-cell {
    &.grid-top    { align-self: flex-start; }
    &.grid-middle { align-self: center; }
    &.grid-bottom { align-self: flex-end; }
  }
}


/**
 * Responsive and Size modifiers
 */
// By default when in mobile view let's make
// all grid cells go full width. This is
// likely to be the desired behaviour.
@include screenLessThan(xs) {
  .grid {
    > .grid-cell {
      flex: 0 0 100%;
      padding: 0 $spacing-grid $spacing-grid;

      &:last-child {
        padding-bottom: 0;
      }
    }
  }
}

//
@mixin makeResponsiveGrid($size) {
  @include gridBreakpoint($size) {
    .grid {
      > .grid-cell {
        &.grid-#{$size}-25 { width: 25%; flex: none; }
        &.grid-#{$size}-50 { width: 50%; flex: none; }
        &.grid-#{$size}-75 { width: 75%; flex: none; }

        &.grid-#{$size}-33 { width: 33.3333%; flex: none; }
        &.grid-#{$size}-66 { width: 66.6666%; flex: none; }

        // TODO: Find a way to get rid of the !important here.
        &.grid-#{$size}-shrink {
          flex-basis: auto !important;
          flex-shrink: 1 !important;
          flex-grow: 0 !important;
        }
      }

      &.grid-#{$size}-fit > .grid-cell {
        flex: 1;
      }

      &.grid-#{$size}-full > .grid-cell {
        flex: 0 0 100%;
        padding: 0 $spacing-grid $spacing-grid;

        &:last-child {
          padding-bottom: 0;
        }
      }
    }
  }
}

//
@mixin gridBreakpoint($size) {
  @if $size == xs {
    @content
  } @else {
    @include screenMoreThan($size) {
      @content
    }
  }
}

@include makeResponsiveGrid(xs);
@include makeResponsiveGrid(sm);
@include makeResponsiveGrid(md);
@include makeResponsiveGrid(lg);
